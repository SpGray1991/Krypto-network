{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Message","className","s","message","avatar","src","answer","AddMessageForm","initialValues","name","onSubmit","values","addMessage","handleChange","handleBlur","handleSubmit","post","htmlFor","type","onChange","onBlur","value","onClick","btn","Dialogs","dialogPage","dialogsElements","dialogs","map","d","DialogItem","id","messagesElements","messages","e","dialog_items","compose"],"mappings":"uLAIMA,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,KAAKD,SAoBNE,IAjBU,SAACC,GAAe,IACjCC,EADgC,4JAEpC,WACE,OAAKC,KAAKC,MAAMN,OAGT,cAACG,EAAD,eAAeE,KAAKC,QAFlB,cAAC,IAAD,CAAUC,GAAG,gBAJY,GACNC,IAAML,WAatC,OAJuCM,YAAQX,EAARW,CACrCL,K,oBClBJM,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,IAAM,uB,oBCAtKD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,2B,wGCsB/EC,EArBC,SAACN,GACf,OACE,qCACE,sBAAKO,UAAWC,IAAEC,QAAlB,UACE,qBACEF,UAAWC,IAAEE,OACbC,IAAI,wKAELX,EAAMS,WAET,sBAAKF,UAAWC,IAAEI,OAAlB,UACE,qBACEL,UAAWC,IAAEE,OACbC,IAAI,wKAELX,EAAMS,e,sBCkBTI,EAAiB,SAACb,GACtB,OACE,8BACE,cAAC,IAAD,CACEc,cAAe,CAAEC,KAAM,IACvBC,SAAU,SAACC,GACTjB,EAAMkB,WAAWD,EAAOF,OAH5B,SAMG,gBAAGE,EAAH,EAAGA,OAAQE,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,aAArC,OACC,gCACE,uBAAOd,UAAWC,IAAEc,KAAMC,QAAQ,OAAlC,yBAGA,0BACEC,KAAM,OACNT,KAAM,OACNU,SAAUN,EACVO,OAAQN,EACRO,MAAOV,EAAOF,OAEhB,wBAAQa,QAASP,EAAcd,UAAWC,IAAEqB,IAAKL,KAAM,SAAvD,mCAUGM,EA3DC,SAAC9B,GACf,IAAIP,EAAQO,EAAM+B,WAEdC,EAAkBvC,EAAMwC,QAAQC,KAAI,SAACC,GAAD,OACtC,cAACC,EAAA,EAAD,CAAYrB,KAAMoB,EAAEpB,KAAMsB,GAAIF,EAAEE,QAG9BC,EAAmB7C,EAAM8C,SAASL,KAAI,SAACM,GAAD,OACxC,cAAC,EAAD,CAAS/B,QAAS+B,EAAE/B,aAGtB,OAAKT,EAAMN,OAKT,sBAAKa,UAAWC,IAAEyB,QAAlB,UACE,qBAAK1B,UAAWC,IAAEiC,aAAlB,SAAiCT,IACjC,sBAAKzB,UAAWC,IAAE+B,SAAlB,UACE,8BAAMD,IACN,8BACE,cAAC,EAAD,CAAgBpB,WAAYlB,EAAMkB,qBATjC,cAAC,IAAD,CAAUjB,GAAG,a,yBCATyC,sBACbvC,aAdoB,SAACV,GACrB,MAAO,CACLsC,WAAYtC,EAAMsC,cAYK,CAEvBb,iBAEFtB,IALa8C,CAMbZ","file":"static/js/4.7b1450cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login/\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Dialogs_active__3zm8I\",\"dialogs\":\"Dialogs_dialogs__24WNz\",\"dialog_items\":\"Dialogs_dialog_items__2aX-p\",\"post\":\"Dialogs_post__2Gyt0\",\"btn\":\"Dialogs_btn__21OqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Message_avatar__3l1kh\",\"answer\":\"Message_answer__VFK_Y\",\"message\":\"Message_message__13BMj\"};","import s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <>\r\n      <div className={s.message}>\r\n        <img\r\n          className={s.avatar}\r\n          src=\"https://pristor.ru/wp-content/uploads/2019/11/%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B8-%D0%B4%D0%BB%D1%8F-%D0%B4%D0%B5%D0%B2%D1%83%D1%88%D0%B5%D0%BA014.jpg\"\r\n        ></img>\r\n        {props.message}\r\n      </div>\r\n      <div className={s.answer}>\r\n        <img\r\n          className={s.avatar}\r\n          src=\"https://pristor.ru/wp-content/uploads/2019/11/%D0%90%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B8-%D0%B4%D0%BB%D1%8F-%D0%B4%D0%B5%D0%B2%D1%83%D1%88%D0%B5%D0%BA001.jpg\"\r\n        ></img>\r\n        {props.message}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} /* key={d.id}  */ />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((e) => (\r\n    <Message message={e.message} />\r\n  ));\r\n\r\n  if (!props.isAuth) {\r\n    return <Navigate to=\"/login/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialog_items}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageForm addMessage={props.addMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ name: \"\" }}\r\n        onSubmit={(values) => {\r\n          props.addMessage(values.name);\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleBlur, handleSubmit }) => (\r\n          <div>\r\n            <label className={s.post} htmlFor=\"name\">\r\n              My messages\r\n            </label>\r\n            <textarea\r\n              type={\"text\"}\r\n              name={\"name\"}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.name}\r\n            ></textarea>\r\n            <button onClick={handleSubmit} className={s.btn} type={\"submit\"}>\r\n              Add messages\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { addMessage } from \"../../Redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogPage: state.dialogPage,\r\n  };\r\n};\r\n\r\n/* const DialogsContainer = connect(mapStateToProps, {\r\n  updateNewMessageBody,\r\n  addMessage,\r\n})(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer; */\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    /* updateNewMessageBody, */\r\n    addMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}