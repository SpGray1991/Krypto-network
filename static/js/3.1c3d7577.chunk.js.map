{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/AddPostForm/AddPostForm.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileUser/ProfileUser.module.css","components/Profile/ProfileUser/ProfileForm/ProfileDataForm.module.css","components/Profile/ProfileUser/Contact/Contact.module.css","components/Profile/ProfileUser/ProfileData/ProfileData.module.css","components/Profile/ProfileUser/ProfileStatus/ProfileStatusWithHooks.module.css","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","Img/232-wink.svg","components/Profile/ProfileUser/ProfileForm/ProfileDataForm.jsx","components/Profile/ProfileUser/Contact/Contact.jsx","components/Profile/ProfileUser/ProfileData/ProfileData.jsx","components/Profile/ProfileUser/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileUser/ProfileUser.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","AddPostForm","initialValues","name","onSubmit","values","addPost","handleChange","handleBlur","handleSubmit","className","style","post","htmlFor","fieldText","type","onChange","onBlur","value","onClick","btn","Post","posts","likePlace","avatar","src","like","deletePost","postId","item","message","MyPosts","memo","postsElements","map","p","id","reverse","MyPostsContainer","profilePage","ProfileDataForm","transparent","fullName","profile","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","validateOnBlur","setStatus","saveProfile","goToEditMode","errors","touched","isValid","dirty","status","input","error","nameCheckbox","textField","Object","keys","key","disabled","profileButton","Contact","contact","fieldProfile","contactTitle","answer","contactValue","ProfileData","about_user","title","wrapper","entries","isOwner","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","wrapper_status","textStatus","onDoubleClick","autoFocus","e","currentTarget","updateStatus","ProfileUser","Preloader","bg_top","wrapper_foto","photos","small","usersPhoto","input_wrapper","input__file","target","files","length","savePhoto","multiple","for","input__file_button","input__file_icon_wrapper","input__file_icon","changeFoto","alt","width","input__file_button_text","profileUpdateStatus","Profile","ProfileContainer","userId","match","params","getUserId","getUserStatus","refreshProfile","prevProps","AuthRedirectComponent","useMatch"],"mappings":"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","file":"static/js/3.1c3d7577.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login/\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"AddPostForm_post__siCnq\",\"btn\":\"AddPostForm_btn__uGWlE\",\"fieldText\":\"AddPostForm_fieldText__cQRhL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__qtz79\",\"avatar\":\"Post_avatar__3vf2C\",\"likePlace\":\"Post_likePlace__FwvXe\",\"item\":\"Post_item__2aP4U\",\"like\":\"Post_like__3gBO3\",\"btn\":\"Post_btn__2Fs4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_top\":\"ProfileUser_bg_top__1UUtv\",\"avatar\":\"ProfileUser_avatar__1OUPO\",\"about_user\":\"ProfileUser_about_user__2C91w\",\"profile\":\"ProfileUser_profile__3Qbyv\",\"wrapper_foto\":\"ProfileUser_wrapper_foto__2wMYU\",\"input__wrapper\":\"ProfileUser_input__wrapper__3o4TS\",\"input__file\":\"ProfileUser_input__file__20HPC\",\"input__file_icon_wrapper\":\"ProfileUser_input__file_icon_wrapper__3_04D\",\"input__file_button_text\":\"ProfileUser_input__file_button_text__31-kS\",\"input__file_button\":\"ProfileUser_input__file_button__c6kul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"ProfileDataForm_transparent__1HdCq\",\"post\":\"ProfileDataForm_post__1-Q3C\",\"input\":\"ProfileDataForm_input__178-l\",\"textField\":\"ProfileDataForm_textField__3jaj1\",\"profileButton\":\"ProfileDataForm_profileButton__1CA4-\",\"nameCheckbox\":\"ProfileDataForm_nameCheckbox__DRcb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__2s2Kg\",\"fieldProfile\":\"Contact_fieldProfile__3aFMT\",\"answer\":\"Contact_answer__3ZXFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about_user\":\"ProfileData_about_user__2jZQL\",\"answer\":\"ProfileData_answer__1P1hL\",\"fieldProfile\":\"ProfileData_fieldProfile__1XPtK\",\"profileButton\":\"ProfileData_profileButton__2Zc7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_status\":\"ProfileStatusWithHooks_wrapper_status__lgwpL\",\"textStatus\":\"ProfileStatusWithHooks_textStatus__3Nbj-\"};","import { Formik } from \"formik\";\r\nimport style from \"./AddPostForm.module.css\";\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ name: \"\" }}\r\n        onSubmit={(values) => {\r\n          props.addPost(values.name);\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleBlur, handleSubmit }) => (\r\n          <div>\r\n            <label className={style.post} htmlFor=\"name\">\r\n              My posts\r\n            </label>\r\n            <textarea\r\n              className={style.fieldText}\r\n              type={\"text\"}\r\n              name={\"name\"}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.name}\r\n            ></textarea>\r\n            <button\r\n              onClick={handleSubmit}\r\n              className={style.btn}\r\n              type={\"submit\"}\r\n            >\r\n              Add post\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n","import style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  let deletePost = () => {\r\n    props.deletePost(props.postId);\r\n  };\r\n\r\n  return (\r\n    <div className={style.posts}>\r\n      <div className={style.likePlace}>\r\n        <img\r\n          className={style.avatar}\r\n          src=\"https://vjoy.cc/wp-content/uploads/2020/12/1133ea1de4e69bd760056f2c04e90920.png\"\r\n        ></img>\r\n        <span className={style.like}>{props.like} like</span>\r\n        <div>\r\n          <button className={style.btn} onClick={deletePost}>\r\n            delete post\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={style.item}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts\r\n    .map((p) => (\r\n      <Post\r\n        message={p.message}\r\n        like={p.like}\r\n        postId={p.id}\r\n        key={p.id}\r\n        deletePost={props.deletePost}\r\n      ></Post>\r\n    ))\r\n    .reverse();\r\n\r\n  return (\r\n    <>\r\n      <AddPostForm addPost={props.addPost} />\r\n      <div>{postsElements}</div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPost, deletePost } from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    postId: state.profilePage.posts.id,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost, deletePost })(\r\n  MyPosts\r\n);\r\n\r\nexport default MyPostsContainer;\r\n","export default __webpack_public_path__ + \"static/media/232-wink.dd8f4970.svg\";","import { Formik, Field } from \"formik\";\r\nimport style from \"./ProfileDataForm.module.css\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return (\r\n    <div className={style.transparent}>\r\n      <Formik\r\n        initialValues={{\r\n          fullName: props.profile.fullName,\r\n          lookingForAJob: props.profile.lookingForAJob,\r\n          lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n          aboutMe: props.profile.aboutMe,\r\n          contacts: {\r\n            facebook: props.profile.contacts.facebook,\r\n            website: props.profile.contacts.website,\r\n            vk: props.profile.contacts.vk,\r\n            twitter: props.profile.contacts.twitter,\r\n            instagram: props.profile.contacts.instagram,\r\n            youtube: props.profile.contacts.youtube,\r\n            github: props.profile.contacts.github,\r\n            mainLink: props.profile.contacts.mainLink,\r\n          },\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, { setStatus }) => {\r\n          props.saveProfile(values, setStatus, props.goToEditMode);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          isValid,\r\n          handleSubmit,\r\n          dirty,\r\n          status,\r\n        }) => (\r\n          <div>\r\n            {status}\r\n            <div>\r\n              <label className={style.post} htmlFor=\"fullName\">\r\n                <span>Full Name</span>\r\n              </label>\r\n              <input\r\n                className={style.input}\r\n                type={\"text\"}\r\n                name={\"fullName\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.fullName}\r\n              ></input>\r\n              {touched.fullName && errors.fullName && (\r\n                <p className={style.error}>{errors.fullName}</p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label className={style.post}>\r\n                <Field type=\"checkbox\" name=\"lookingForAJob\" />\r\n                <span className={style.nameCheckbox}>Looking For A Job</span>\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label className={style.post} htmlFor=\"lookingForAJobDescription\">\r\n                <span>My Professional Skills</span>\r\n              </label>\r\n              <textarea\r\n                className={style.textField}\r\n                type={\"text\"}\r\n                name={\"lookingForAJobDescription\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.lookingForAJobDescription}\r\n              ></textarea>\r\n              {touched.lookingForAJobDescription &&\r\n                errors.lookingForAJobDescription && (\r\n                  <p className={style.error}>\r\n                    {errors.lookingForAJobDescription}\r\n                  </p>\r\n                )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className={style.post} htmlFor=\"aboutMe\">\r\n                <span>About Me</span>\r\n              </label>\r\n              <textarea\r\n                className={style.textField}\r\n                type={\"text\"}\r\n                name={\"aboutMe\"}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.aboutMe}\r\n              ></textarea>\r\n              {touched.aboutMe && errors.aboutMe && (\r\n                <p className={style.error}>{errors.aboutMe}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              {Object.keys(props.profile.contacts).map((key) => {\r\n                return (\r\n                  <div>\r\n                    <label className={style.post} htmlFor={key}>\r\n                      <span>{key}</span>\r\n                    </label>\r\n                    <input\r\n                      className={style.input}\r\n                      type={\"text\"}\r\n                      name={\"contacts.\" + key}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.contacts[key]}\r\n                    ></input>\r\n                    {touched.key && errors.key && (\r\n                      <p className={style.error}>{errors.key}</p>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <button\r\n              disabled={!isValid && !dirty}\r\n              onClick={handleSubmit}\r\n              className={style.profileButton}\r\n              type={\"submit\"}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import style from \"./Contact.module.css\";\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <div className={style.contact}>\r\n      <p className={style.fieldProfile}>\r\n        {props.contactTitle} :{\" \"}\r\n        <span className={style.answer}>\r\n          {props.contactValue === \"null\" || props.contactValue === \"\"\r\n            ? \"no\"\r\n            : props.contactValue}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact/Contact\";\r\nimport style from \"./ProfileData.module.css\";\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n    <div className={style.about_user}>\r\n      <h1 className={style.title}>{props.profile.fullName}</h1>\r\n      <div className={style.wrapper}>\r\n        <p className={style.fieldProfile}>\r\n          Looking For A Job :{\" \"}\r\n          <span className={style.answer}>\r\n            {props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n          </span>\r\n        </p>\r\n        {props.profile.lookingForAJob && (\r\n          <div>\r\n            <p className={style.fieldProfile}>\r\n              My Professional skills :{\" \"}\r\n              <span className={style.answer}>\r\n                {props.profile.lookingForAJobDescription}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className={style.fieldProfile}>\r\n        About Me :<span className={style.answer}>{props.profile.aboutMe}</span>\r\n      </p>\r\n      <p className={style.fieldProfile}>Contacts :</p>\r\n      {Object.entries(props.profile.contacts).map(([key, value]) => {\r\n        return (\r\n          <Contact\r\n            key={key}\r\n            contactTitle={`${key}`}\r\n            contactValue={`${value}`}\r\n          />\r\n        );\r\n      })}\r\n      {props.isOwner && (\r\n        <div>\r\n          <button className={style.profileButton} onClick={props.goToEditMode}>\r\n            Edit Profile\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport style from \"./ProfileStatusWithHooks.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div className={style.wrapper_status}>\r\n          <span className={style.status}>Status</span> :{\" \"}\r\n          <span className={style.textStatus} onDoubleClick={activateEditMode}>\r\n            {\" \"}\r\n            {props.status || \"No\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import { useState } from \"react\";\r\nimport style from \"./ProfileUser.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport usersPhoto from \"../../../Img/images.jpg\";\r\nimport changeFoto from \"../../../Img/232-wink.svg\";\r\nimport ProfileDataForm from \"./ProfileForm/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileUser = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const loadAvatar = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.bg_top}></div>\r\n      <div className={style.profile}>\r\n        <div className={style.wrapper_foto}>\r\n          <img\r\n            className={style.avatar}\r\n            src={\r\n              props.profile.photos.small != null\r\n                ? props.profile.photos.small\r\n                : usersPhoto\r\n            }\r\n          />\r\n          <div>\r\n            {props.isOwner && (\r\n              <div className={style.input_wrapper}>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  id=\"input__file\"\r\n                  className={style.input__file}\r\n                  onChange={loadAvatar}\r\n                  multiple\r\n                ></input>\r\n                <label for=\"input__file\" className={style.input__file_button}>\r\n                  <span className={style.input__file_icon_wrapper}>\r\n                    <img\r\n                      className={style.input__file_icon}\r\n                      src={changeFoto}\r\n                      alt=\"Выбрать файл\"\r\n                      width=\"25\"\r\n                    ></img>\r\n                  </span>\r\n                  <span className={style.input__file_button_text}>\r\n                    Выберите фото\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <ProfileStatusWithHooks\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          {editMode ? (\r\n            <ProfileDataForm\r\n              saveProfile={props.saveProfile}\r\n              profile={props.profile}\r\n              setEditMode={setEditMode}\r\n              profileUpdateStatus={props.profileUpdateStatus}\r\n              goToEditMode={() => {\r\n                setEditMode(false);\r\n              }}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              profile={props.profile}\r\n              status={props.status}\r\n              updateStatus={props.updateStatus}\r\n              isOwner={props.isOwner}\r\n              goToEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileUser;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileUser from \"./ProfileUser/ProfileUser\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileUser\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n        profileUpdateStatus={props.profileUpdateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserId,\r\n  getUserStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../Redux/profile-reducer\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId =\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.id;\r\n    }\r\n\r\n    this.props.getUserId(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match !== prevProps.match) {\r\n      this.refreshProfile();\r\n    } else if (!this.props.match && this.props.match !== prevProps.match) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          isOwner={!(this.props.match && this.props.match.params.userId)}\r\n          profile={this.props.profile}\r\n          isAuth={this.props.isAuth}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n          saveProfile={this.props.saveProfile}\r\n          profileUpdateStatus={this.props.profileUpdateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nconst ProfileURLMatch = (props) => {\r\n  const match = useMatch(\"/profile/:userId\");\r\n  return <AuthRedirectComponent {...props} match={match} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  id: state.auth.id,\r\n  profileUpdateStatus: state.profilePage.profileUpdateStatus,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserId,\r\n  getUserStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n})(ProfileURLMatch);\r\n"],"sourceRoot":""}