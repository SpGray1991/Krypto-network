{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileUser/ProfileUser.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileUser/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileUser/ProfileUser.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","avatar","src","message","like","onClick","deletePost","postId","MyPosts","memo","postsElements","posts","map","p","id","addPost","AddPostForm","initialValues","name","onSubmit","values","handleChange","handleBlur","handleSubmit","post","htmlFor","type","onChange","onBlur","value","btn","MyPostsContainer","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","onDoubleClick","autoFocus","e","currentTarget","updateStatus","ProfileUser","profile","bg_top","photos","small","usersPhoto","about_user","title","fullName","aboutMe","contacts","facebook","Preloader","Profile","ProfileContainer","userId","match","params","getUserId","getUserStatus","AuthRedirectComponent","useMatch"],"mappings":"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","file":"static/js/3.ceea3222.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login/\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__1LG5w\",\"btn\":\"MyPosts_btn__17Q6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Post_avatar__3vf2C\",\"item\":\"Post_item__2aP4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_top\":\"ProfileUser_bg_top__1UUtv\",\"avatar\":\"ProfileUser_avatar__1OUPO\",\"about_user\":\"ProfileUser_about_user__2C91w\"};","import s from \"./Post.module.css\";\r\nimport { deletePost } from \"../../../../Redux/profile-reducer\";\r\n\r\nconst Post = (props) => {\r\n  let deletePost = () => {\r\n    props.deletePost(props.postId);\r\n  };\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        className={s.avatar}\r\n        src=\"https://vjoy.cc/wp-content/uploads/2020/12/1133ea1de4e69bd760056f2c04e90920.png\"\r\n      ></img>\r\n      {props.message}\r\n      <div>\r\n        <span>{props.like} like</span>\r\n      </div>\r\n      <div>\r\n        <button onClick={deletePost}>delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Formik } from \"formik\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post\r\n      message={p.message}\r\n      like={p.like}\r\n      postId={p.id}\r\n      /* key={p.id} */\r\n      deletePost={props.deletePost}\r\n    ></Post>\r\n  ));\r\n\r\n  /*  let newPostElement = React.useRef();\r\n\r\n  let onAddPost = () => {\r\n    props.addPost();\r\n  };\r\n\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      <AddPostForm addPost={props.addPost} />\r\n      {/* <form onSubmit={handleSubmit}>\r\n        <label className={s.post} for=\"content\">\r\n          My posts\r\n        </label>\r\n        <textarea\r\n          onChange={onPostChange}\r\n          value={props.postText}\r\n          ref={newPostElement}\r\n        ></textarea>\r\n        <button onClick={onAddPost} className={s.btn} type=\"submit\">\r\n          Add post\r\n        </button>\r\n      </form> */}\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ name: \"\" }}\r\n        onSubmit={(values) => {\r\n          props.addPost(values.name);\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleBlur, handleSubmit }) => (\r\n          <div>\r\n            <label className={s.post} htmlFor=\"name\">\r\n              My posts\r\n            </label>\r\n            <textarea\r\n              type={\"text\"}\r\n              name={\"name\"}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.name}\r\n            ></textarea>\r\n            <button onClick={handleSubmit} className={s.btn} type={\"submit\"}>\r\n              Add post\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPost, deletePost } from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    postId: state.profilePage.posts.id,\r\n    /*  postText: state.profilePage.newPostText, */\r\n  };\r\n};\r\n/* \r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {\r\n      dispatch(updateNewPostTextActionCreator(text));\r\n    },\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n  };\r\n}; */\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost, deletePost })(\r\n  MyPosts\r\n);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import s from \"./ProfileUser.module.css\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport usersPhoto from \"../../../Img/images.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileUser = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={s.bg_top}></div>\r\n      <img\r\n        className={s.avatar}\r\n        src={\r\n          props.profile.photos.small != null\r\n            ? props.profile.photos.small\r\n            : usersPhoto\r\n        }\r\n      />\r\n      <ProfileStatusWithHooks\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <div className={s.about_user}>\r\n        <h1 className={s.title}>\r\n          {props.profile.fullName} {props.profile.aboutMe}\r\n        </h1>\r\n        <p>Date of birthday: 18 july </p>\r\n        <p>City: Zaporizhzhia </p>\r\n        <p>Education: ZNTU </p>\r\n        <p>\r\n          Web-site:\r\n          {props.profile.contacts.facebook}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileUser;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileUser from \"./ProfileUser/ProfileUser\";\r\n\r\nconst Profile = (props) => {\r\n  /* if (!props.isAuth) {\r\n    return <Login />;\r\n  } */\r\n  return (\r\n    <div>\r\n      <ProfileUser\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserId,\r\n  getUserStatus,\r\n  updateStatus,\r\n} from \"../../Redux/profile-reducer\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId =\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.id;\r\n    }\r\n\r\n    this.props.getUserId(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          isAuth={this.props.isAuth}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nconst ProfileURLMatch = (props) => {\r\n  const match = useMatch(\"/profile/:userId\");\r\n  return <AuthRedirectComponent {...props} match={match} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  id: state.auth.id,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserId,\r\n  getUserStatus,\r\n  updateStatus,\r\n})(ProfileURLMatch);\r\n\r\n/* export default compose(\r\n  connect(mapStateToProps, {\r\n    getUserId,\r\n  }),\r\n  withAuthRedirect\r\n)(ProfileContainer); */\r\n"],"sourceRoot":""}